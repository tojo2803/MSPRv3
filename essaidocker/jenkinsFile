pipeline {
    agent any

    environment {
        // Variables d'env, adapter selon ton setup
        DOCKER_COMPOSE_FILE = "docker-compose.yml"
        SONAR_HOST_URL = "http://sonarqube:9000"  // Ton serveur SonarQube (√† adapter)
        SONAR_LOGIN = credentials('sqa_820c72de13cb48cde04b367a9af9ceefe587be5a') // Token Sonar stock√© dans Jenkins Credentials
    }

    stages {
        stage('Checkout') {
            steps {
                echo "R√©cup√©ration du code source"
                checkout scm
            }
        }

        stage('Build Frontend') {
            steps {
                echo "Build frontend Vue.js"
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('Build Backend') {
            steps {
                echo "Build backend Docker images"
                sh 'docker-compose build'
            }
        }

        stage('Analyse Qualit√© de Code') {
            steps {
                echo "Lancement de SonarQube Scan"
                withSonarQubeEnv('SonarQube') {
                    sh 'sonar-scanner'
                }
            }
        }

        stage('Deploy') {
            steps {
                echo "D√©ploiement avec Docker Compose"
                sh 'docker-compose up -d'
            }
        }
    }

    post {
        success {
            echo 'Pipeline r√©ussi üéâ'
        }
        failure {
            echo 'Pipeline √©chou√© ‚ùå'
        }
    }
}
